#!/system/bin/sh

mkdir /sdcard/GSM
LOG=/sdcard/GSM/GSM.log
rm $LOG

# Log in white and continue (unnecessary)
kmsg() {
	echo -e "[*] $@" >> $LOG
	echo -e "[*] $@"
}

kmsg1() {
	echo -e "$@" >> $LOG
	echo -e "$@"
}

toasten() {
	am start -a android.intent.action.MAIN -e toasttext "Applying $GSM_profile profile..." -n com.gsm.toast/.MainActivity
}
	
toasten1() {
	am start -a android.intent.action.MAIN -e toasttext "$GSM_profile profile applied" -n com.gsm.toast/.MainActivity
}

toastpt() {
	am start -a android.intent.action.MAIN -e toasttext "Aplicando perfil $GSM_profilept..." -n com.gsm.toast/.MainActivity
}

toastpt1() {
	am start -a android.intent.action.MAIN -e toasttext "Perfil $GSM_profilept aplicado" -n com.gsm.toast/.MainActivity
}

toastin() {
	am start -a android.intent.action.MAIN -e toasttext "Menerapkan profil $GSM_profilein..." -n com.gsm.toast/.MainActivity
}

toastin1() {
	am start -a android.intent.action.MAIN -e toasttext "Profil $GSM_profilein terpakai" -n com.gsm.toast/.MainActivity
}

toasttr() {
	am start -a android.intent.action.MAIN -e toasttext "$GSM_profiletr profili uygulanıyor..." -n com.gsm.toast/.MainActivity
}

toasttr1() {
	am start -a android.intent.action.MAIN -e toasttext "$GSM_profiletr profili uygulandı" -n com.gsm.toast/.MainActivity
}

toastfr() {
	am start -a android.intent.action.MAIN -e toasttext "Chargement du profil $GSM_profilefr..." -n com.gsm.toast/.MainActivity
}

toastfr1() {
	am start -a android.intent.action.MAIN -e toasttext "Profil $GSM_profilefr chargé" -n com.gsm.toast/.MainActivity
}

ctl() {
	# Bail out if file does not exist
	if [[ ! -f "$1" ]]
	then
    kmsg1 "[!] $1 doesn't exist, skipping..."
    return 1
    fi

	# Fetch the current key value
	local curval=`cat "$1" 2> /dev/null`
	
	# Bail out if value is already set
	if [[ "$curval" == "$2" ]]
	then
	kmsg "$1 is already set to $2, skipping..."
	return 1
	fi

	# Make file writable in case it is not already
	chmod +w "$1" 2> /dev/null

	# Write the new value and bail if there's an error
	if ! echo "$2" > "$1" 2> /dev/null
	then
		kmsg1 "[!] Failed: $1 -> $2"
		return 1
	fi

	# Log the success
	kmsg "$1 $curval -> $2"
}

write() {
	# Bail out if file does not exist
	if [[ ! -f "$1" ]]
	then
    kmsg "$1 doesn't exist, skipping..."
    return 1
    fi

	# Fetch the current key value
	local curval=`cat "$1" 2> /dev/null`
	
	# Bail out if value is already set
	if [[ "$curval" == "$2" ]]
	then
	kmsg "$1 is already set to $2, skipping..."
	return 1
	fi

	# Make file writable in case it is not already
	chmod +w "$1" 2> /dev/null

	# Write the new value and bail if there's an error
	if ! echo "$2" > "$1" 2> /dev/null
	then
		kmsg1 "[!] Failed: $1 -> $2"
		return 1
	fi

	# Log the success
	kmsg "$1 $curval -> $2"
}

change_task_cgroup() {
# avoid matching grep itself
# ps -Ao pid,args | grep kswapd
# 150 [kswapd0]
# 16490 grep kswapd
echo $@
local ps_ret
ps_ret="$(ps -Ao pid,args)"
for temp_pid in $(echo "$ps_ret" | grep "$1" | awk '{print $1}'); do
for temp_tid in $(ls "/proc/$temp_pid/task/"); do
echo "$temp_tid" > "/dev/$3/$2/tasks"
done
done
}

# Check for root permissions and bail if not granted
if [[ "$(id -u)" -ne 0 ]]
then
kmsg1 "[!] No root permissions. Exiting."
exit 1
fi

setprop gsm.tweaks.support "1"

boot_run_once=false
GSM_mode=$(getprop persist.godspeed.mode)
[ -z "$GSM_mode" ] && setprop persist.godspeed.mode "3"

while true
do
sleep 3
if $boot_run_once
then
[ "$(getprop persist.godspeed.mode)" == "$GSM_mode" ] && continue
else
boot_run_once=true
fi
GSM_mode=$(getprop persist.godspeed.mode)
loc=/data/adb/modules

# Duration in nanoseconds of one scheduling period
SCHED_PERIOD_LATENCY="$((1 * 1000 * 1000))"

SCHED_PERIOD_BALANCE="$((4 * 1000 * 1000))"

SCHED_PERIOD_BATTERY="$((8 * 1000 * 1000))"

SCHED_PERIOD_THROUGHPUT="$((10 * 1000 * 1000))"

# How many tasks should we have at a maximum in one scheduling period
SCHED_TASKS_LATENCY="10"

SCHED_TASKS_BATTERY="4"

SCHED_TASKS_BALANCE="8"

SCHED_TASKS_THROUGHPUT="6"

# Maximum unsigned integer size in C
UINT_MAX="4294967295"

# Variable to GPU directories.
	if [ -d "/sys/class/kgsl/kgsl-3d0" ]; then
		gpu="/sys/class/kgsl/kgsl-3d0"
	elif [ -d "/sys/devices/platform/kgsl-3d0.0/kgsl/kgsl-3d0" ]; then
		gpu="/sys/devices/platform/kgsl-3d0.0/kgsl/kgsl-3d0"
	elif [ -d "/sys/devices/soc/*.qcom,kgsl-3d0/kgsl/kgsl-3d0" ]; then
		gpu="/sys/devices/soc/*.qcom,kgsl-3d0/kgsl/kgsl-3d0"
	elif [ -d "/sys/devices/soc.0/*.qcom,kgsl-3d0/kgsl/kgsl-3d0" ]; then
		gpu="/sys/devices/soc.0/*.qcom,kgsl-3d0/kgsl/kgsl-3d0"
	elif [ -d "/sys/devices/platform/*.gpu/devfreq/*.gpu" ]; then
		gpu="/sys/devices/platform/*.gpu/devfreq/*.gpu"
	elif [ -d "/sys/devices/platform/gpusysfs" ]; then
		gpu="/sys/devices/platform/gpusysfs"
	elif [ -d "/sys/devices/*.mali" ]; then
		gpu="/sys/devices/*.mali"
	elif [ -d "/sys/devices/*.gpu" ]; then
		gpu="/sys/devices/*.gpu"
	elif [ -d "/sys/devices/platform/mali.0" ]; then
		gpu="/sys/devices/platform/mali.0"
	elif [ -d "/sys/devices/platform/mali-*.0" ]; then
		gpu="/sys/devices/platform/mali-*.0"
	elif [ -d "/sys/module/mali/parameters" ]; then
		gpu="/sys/module/mali/parameters"
	elif [ -d "/sys/class/misc/mali0" ]; then
		gpu="/sys/class/misc/mali0"
	elif [ -d "/sys/kernel/gpu" ]; then
		gpu="/sys/kernel/gpu"
	fi

# Variable to selinux state
if [[ $(cat /sys/fs/selinux/enforce) == "1" ]]
then
selinuxstate=Enforcing

elif [[ $(cat /sys/fs/selinux/enforce) == "0" ]]
then
selinuxstate=Permissive

else
selinuxstate=? (Unknown)
fi

# Variable to device SDK
sdk=$(getprop ro.build.version.sdk)

# Variable to device android release version
arv=$(getprop ro.build.version.release)

# Variable to device model
dm=$(getprop ro.product.model)

# Variable to device SOC
soc=$(getprop ro.board.platform) 

# Variable to get magisk version
magisk=$(magisk -c)

# Variable to total device ram
totalram=$(free -m | awk '/Mem:/{print $2}')

# Variable to battery actual capacity
percentage=$(cat /sys/class/power_supply/battery/capacity)

# Variable to battery design capacity
bdc=$(cat /sys/class/power_supply/battery/charge_full_design)

# Detect other conflicting modules.
if [[ -d $loc/injector ]]
then
kmsg1 "A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
    
elif [[ -d $loc/Pulsar_Engine ]]
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/zeetaatweaks ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/gaming ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/smext ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/fkm_spectrum_injector ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/NetworkTweak ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/MAGNETAR ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/FDE ]] 
then 
kmsg1 "A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/lazy ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[  $(pm list package feravolt) ]] 
then
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/ktweak ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package ktweak) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/lspeed ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package lspeed) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package magnetarapp) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package lsandroid) ]] 
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/sqinjector ]]    
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ -d $loc/ZeroLAG ]]    
then 
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
	
elif [[ $(pm list package kitana) ]]
then
kmsg1 "[!] A conflicting module/app is installed, please remove and then reboot to module work properly."
exit 1
fi

if [[ "$GSM_mode" == "1" ]]
then
GSM_profilein=Latensi

elif [[ "$GSM_mode" == "2" ]]
then
GSM_profilein=Baterai

elif [[ "$GSM_mode" == "3" ]]
then
GSM_profilein=Seimbang

elif [[ "$GSM_mode" == "4" ]]
then
GSM_profilein=Ekstrim

elif [[ "$GSM_mode" == "5" ]]
then
GSM_profilein=Gaming
fi

if [[ "$GSM_mode" == "1" ]]
then
GSM_profilept=Latência

elif [[ "$GSM_mode" == "2" ]]
then
GSM_profilept=Bateria
        	
elif [[ "$GSM_mode" == "3" ]]
then
GSM_profilept=Balanceado
        	
elif [[ "$GSM_mode" == "4" ]]
then
GSM_profilept=Extremo
        	
elif [[ "$GSM_mode" == "5" ]]
then
GSM_profilept=Gaming
fi
	 	
if [[ "$GSM_mode" == "1" ]]
then
GSM_profile=Latency

elif [[ "$GSM_mode" == "2" ]]
then
GSM_profile=Battery
        	
elif [[ "$GSM_mode" == "3" ]]
then
GSM_profile=Balanced
        	
elif [[ "$GSM_mode" == "4" ]]
then
GSM_profile=Extreme

elif [[ "$GSM_mode" == "5" ]]
then
GSM_profile=Gaming
fi

if [[ "$GSM_mode" == "1" ]]
then
GSM_profiletr=Gecikme

elif [[ "$GSM_mode" == "2" ]]
then
GSM_profiletr=Batarya
        	
elif [[ "$GSM_mode" == "3" ]]
then
GSM_profiletr=Dengeli
        	
elif [[ "$GSM_mode" == "4" ]]
then
GSM_profiletr=Aşırı

elif [[ "$GSM_mode" == "5" ]]
then
GSM_profiletr=Oyun
fi

if [[ "$GSM_mode" == "1" ]]
then
GSM_profilefr=Latence

elif [[ "$GSM_mode" == "2" ]]
then
GSM_profilefr=Batterie
        	
elif [[ "$GSM_mode" == "3" ]]
then
GSM_profilefr=Modéré
        	
elif [[ "$GSM_mode" == "4" ]]
then
GSM_profilefr=Extrême

elif [[ "$GSM_mode" == "5" ]]
then
GSM_profilefr=Jeu
fi

case "$GSM_profile" in
# Latency Profile
     "Latency") {
     	init=$(date +%s)
     	if [[ $(getprop persist.sys.locale) == "en-US" ]]
     	then
     	toasten
     	
     	elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
         then
         toasten
         
     	elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
     	then
     	toastpt
     	
     	elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
     	then
     	toastin
     	
     	elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
     	then
     	toasttr
     	
     	elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
     	then
     	toastfr

     	elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
     	then
     	toastfr

     	else
     	toasten
     	fi
     	
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            🕛 Date of execution: $(date)                                                                                   " 
kmsg1 "                                            🔧 Kernel: `uname -a`                                                                                           "
kmsg1 "                                            🛠️ SOC: $soc                                                                                                    "
kmsg1 "                                            ⚙️ SDK: $sdk                                                                                                    "
kmsg1 "                                            🅰️ndroid Version: $arv                                                                                          "
kmsg1 "                                            📱 Device: $dm                                                                                                  "
kmsg1 "                                            👑 GSM Version: 1.9.0                                                                                           "
kmsg1 "                                            🧬 Battery design capacity: $bdc mAh                                                                            "
kmsg1 "                                            🔋 Battery actual capacity: $(( bdc * percentage/100 )) mAh available ($percentage%)                            "
kmsg1 "                                            🔐 SELinux: $selinuxstate                                                                                       "
kmsg1 "                                            💾 Device RAM: $totalram MB                                                                                     "
kmsg1 "                                            👺 Magisk: $magisk                                                                                              "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING $GSM_profile PROFILE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	       	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING THERMAL-ENGINE, THERMALD AND PERFD...                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
        	
# Enable perfd, thermald and thermal-engine.
start perfd
start thermald
start thermal-engine       	

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING STATSD AND LOGD...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable logd and statsd to reduce overhead.
stop logd
stop statsd

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU_BOOST...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/cpu_boost" ]]
then
write "/sys/module/cpu_boost/parameters/dynamic_stune_boost" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 32
write "${queue}iosched/low_latency" 1
write "${queue}nomerges" 2
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 32
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "0"
write "${cpu}schedutil/down_rate_limit_us" "0"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "0"
write "${cpu}schedutil/hispeed_load" "89"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "0"
write "${cpu}interactive/boost" "0"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/use_migration_notif" "1" 
write "${cpu}interactive/ignore_hispeed_on_notif" "1"
write "${cpu}interactive/use_sched_load" "1"
write "${cpu}interactive/boostpulse" "0"
write "${cpu}interactive/fastlane" "1"
write "${cpu}interactive/fast_ramp_down" "0"
write "${cpu}interactive/sampling_rate" "0"
write "${cpu}interactive/sampling_rate_min" "0"
write "${cpu}interactive/min_sample_time" "0"
write "${cpu}interactive/go_hispeed_load" "89"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done

write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks.
write "$gpu/throttling" "1"
write "$gpu/thermal_pwrlevel" "0"
write "$gpu/devfreq/adrenoboost" "0"
write "$gpu/force_no_nap" "0"
write "$gpu/bus_split" "1"
write "$gpu/devfreq/min_freq" "100000000"
write "$gpu/devfreq/max_freq" "$UINT_MAX"
write "$gpu/default_pwrlevel" "6"
write "$gpu/force_bus_on" "0"
write "$gpu/force_clk_on" "0"
write "$gpu/force_rail_on" "0"
write "$gpu/devfreq/polling_interval" "10"
write "$gpu/idle_timer" "96"

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]] 
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "0"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "7500"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "25"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "30"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [[ -e "/sys/module/mali/parameters/mali_debug_level" ]] 
then
write "/sys/module/mali/parameters/mali_debug_level" "0"
fi

if [[ -e "/sys/module/logger/parameters/log_mode" ]] 
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [[ -e "/sys/module/printk/parameters/console_suspend" ]] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING LMK TWEAKS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# LMK Tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDTUNE TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune Tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "1"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "1"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING FS TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler tweaks. 
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "NO_TTWU_QUEUE"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "NO_WAKEUP_PREEMPTION"

fi
done
 
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Chain disable.
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done
 
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for GSM in /proc/sys/kernel/
do
write "${GSM}sched_child_runs_first" "1"
write "${GSM}perf_cpu_time_max_percent" "1"
write "${GSM}sched_autogroup_enabled" "1"
write "${GSM}random/read_wakeup_threshold" "64"
write "${GSM}random/write_wakeup_threshold" "512"
write "${GSM}random/urandom_min_reseed_secs" "90"
write "${GSM}sched_tunable_scaling" "0"
write "${GSM}sched_latency_ns" "$SCHED_PERIOD_LATENCY"
write "${GSM}sched_min_granularity_ns" "$((SCHED_PERIOD_LATENCY / SCHED_TASKS_LATENCY))"
write "${GSM}sched_wakeup_granularity_ns" "$((SCHED_PERIOD_LATENCY / 2))"
write "${GSM}sched_migration_cost_ns" "5000000"
write "${GSM}sched_min_task_util_for_colocation" "0"
write "${GSM}sched_nr_migrate" "4"
write "${GSM}sched_schedstats" "0"
write "${GSM}printk_devkmsg" "off"
done

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "2000"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU FREQUENCY...                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set min and max clocks.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "300000"
write "${minclk}scaling_max_freq" "20000000"
fi
done

for mnclk in /sys/devices/system/cpu/cpu*/cpufreq/
do
if [[ -e "${mnclk}scaling_min_freq" ]]
then
write "${mnclk}scaling_min_freq" "300000"
write "${mnclk}scaling_max_freq" "20000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and smoothness.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "1"
write "${vm}dirty_ratio" "30"
write "${vm}dirty_expire_centisecs" "500"
write "${vm}dirty_writeback_centisecs" "0"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "60"
write "${vm}swappiness" "100"
write "${vm}vfs_cache_pressure" "200"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM_THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "0"
write /sys/module/msm_thermal/core_control/enabled "0"
write /sys/module/msm_thermal/parameters/enabled "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING POWER EFFICIENT WORKQUEUE...                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable power efficient workqueue.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W.
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_no_metrics_save" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l); do
write "$i/tx_queue_len" 1000
done;

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING LPM SLEEP...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable LPM sleep in balanced / battery profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DİSABLING PM2 IDLE SLEEP MODE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/pm2/parameters/idle_sleep_mode" ]] 
then
write "/sys/module/pm2/parameters/idle_sleep_mode" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LCD POWER REDUCE...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DİSABLING GENTLE FAIR SLEEPERS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FORCE FAST CHARGING...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

pm disable com.google.android.gms/com.google.android.gms.auth.managed.admin.DeviceAdminReceiver
pm disable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver
pm disable com.google.android.gms/.ads.settings.AdsSettingsActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorMapActivity
pm disable com.google.android.gms/com.google.android.location.settings.ActivityRecognitionPermissionActivity
pm disable com.google.android.gms/com.google.android.location.settings.GoogleLocationSettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationHistorySettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationSettingsCheckerActivity
pm disable com.google.android.gms/.usagereporting.settings.UsageReportingActivity
pm disable com.google.android.gms/.ads.adinfo.AdvertisingInfoContentProvider
pm disable com.google.android.gms/com.google.android.location.reporting.service.ReportingContentProvider
pm disable com.google.android.gms/com.google.android.location.internal.LocationContentProvider
pm disable com.google.android.gms/.common.stats.net.contentprovider.NetworkUsageContentProvider
pm disable com.google.android.gms/com.google.android.gms.ads.config.GServicesChangedReceiver
pm disable com.google.android.gms/com.google.android.contextmanager.systemstate.SystemStateReceiver
pm disable com.google.android.gms/.ads.jams.SystemEventReceiver
pm disable com.google.android.gms/.ads.config.FlagsReceiver
pm disable com.google.android.gms/.ads.social.DoritosReceiver
pm disable com.google.android.gms/.analytics.AnalyticsReceiver
pm disable com.google.android.gms/.analytics.internal.GServicesChangedReceiver
pm disable com.google.android.gms/.common.analytics.CoreAnalyticsReceiver
pm disable com.google.android.gms/.common.stats.GmsCoreStatsServiceLauncher
pm disable com.google.android.gms/com.google.android.location.internal.AnalyticsSamplerReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ActiveReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ClockworkFallbackReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ImposeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gms/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateActivity
pm disable com.google.android.gsf/.update.SystemUpdatePanoActivity
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$Receiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gsf/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$SecretCodeReceiver
pm disable com.google.android.gsf/.checkin.CheckinService
pm disable com.google.android.gsf/.checkin.EventLogService
pm disable com.google.android.gsf/.update.SystemUpdateService
pm disable com.google.android.apps.wellbeing/.powerstate.impl.PowerStateJobService
pm disable com.google.android.apps.wellbeing/androidx.work.impl.background.systemjob.SystemJobService

# Disable GMS and IMS run in startup and restart it on boot
cmd appops set com.google.android.gms BOOT_COMPLETED ignore
cmd appops set com.google.android.ims BOOT_COMPLETED ignore

# Disable GMS and IMS run in startup and restart it on boot (custom permissions for Oxygen OS)
cmd appops set com.google.android.gms AUTO_START ignore
cmd appops set com.google.android.ims AUTO_START ignore

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $GSM_profile PROFILE APPLIED WITH SUCCESS.                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ $(getprop persist.sys.locale) == "en-US" ]]
then
toasten1
     	
elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
then
toasten1

elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
then
toastpt1
     	
elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
then
toastin1

elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
then
toasttr1

elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
then
toastfr1

elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
then
toastfr1

else
toasten1
fi
};;
     # Balanced Profile
     "Balanced") {
     	init=$(date +%s)
     	if [[ $(getprop persist.sys.locale) == "en-US" ]]
     	then
     	toasten
     	
     	elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
         then
         toasten
         
     	elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
     	then
     	toastpt
     	
     	elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
     	then
     	toastin
     	
     	elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
     	then
     	toasttr
     	
     	elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
     	then
     	toastfr

     	else
     	toasten
     	fi
     	
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            🕛 Date of execution: $(date)                                                                                   " 
kmsg1 "                                            🔧 Kernel: `uname -a`                                                                                           "
kmsg1 "                                            🛠️ SOC: $soc                                                                                                    "
kmsg1 "                                            ⚙️ SDK: $sdk                                                                                                    "
kmsg1 "                                            🅰️ndroid Version: $arv                                                                                          "
kmsg1 "                                            📱 Device: $dm                                                                                                  "
kmsg1 "                                            👑 GSM Version: 1.9.0                                                                                           "
kmsg1 "                                            🧬 Battery design capacity: $bdc mAh                                                                            "
kmsg1 "                                            🔋 Battery actual capacity: $(( bdc * percentage/100 )) mAh available ($percentage%)                            "
kmsg1 "                                            🔐 SELinux: $selinuxstate                                                                                       "
kmsg1 "                                            💾 Device RAM: $totalram MB                                                                                     "
kmsg1 "                                            👺 Magisk: $magisk                                                                                              "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING $GSM_profile PROFILE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	       	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING THERMAL-ENGINE, THERMALD AND PERFD...                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
        	
# Enable perfd, thermald and thermal-engine.
start perfd
start thermald
start thermal-engine

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING STATSD AND LOGD...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable logd and statsd to reduce overhead.
stop logd
stop statsd

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU_BOOST...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/cpu_boost" ]]
then
write "/sys/module/cpu_boost/parameters/dynamic_stune_boost" "5"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 128
write "${queue}iosched/low_latency" 1
write "${queue}nomerges" 2
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 64
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD_BALANCE / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD_BALANCE / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD_BALANCE / 1000))"
write "${cpu}schedutil/hispeed_load" "90"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD_BALANCE / 1000))"
write "${cpu}interactive/boost" "0"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/use_migration_notif" "1" 
write "${cpu}interactive/ignore_hispeed_on_notif" "1"
write "${cpu}interactive/use_sched_load" "1"
write "${cpu}interactive/boostpulse" "0"
write "${cpu}interactive/fastlane" "1"
write "${cpu}interactive/fast_ramp_down" "0"
write "${cpu}interactive/sampling_rate" "10000"
write "${cpu}interactive/sampling_rate_min" "10000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD_BALANCE / 1000))"
write "${cpu}interactive/go_hispeed_load" "90"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done

write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks.
write "$gpu/throttling" "1"
write "$gpu/thermal_pwrlevel" "3"
write "$gpu/devfreq/adrenoboost" "0"
write "$gpu/force_no_nap" "0"
write "$gpu/bus_split" "1"
write "$gpu/devfreq/min_freq" "100000000"
write "$gpu/devfreq/max_freq" "$UINT_MAX"
write "$gpu/default_pwrlevel" "6"
write "$gpu/force_bus_on" "0"
write "$gpu/force_clk_on" "0"
write "$gpu/force_rail_on" "0"
write "$gpu/devfreq/polling_interval" "10"
write "$gpu/idle_timer" "100"

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]] 
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "0"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "6000"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "25"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "25"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [[ -e "/sys/module/mali/parameters/mali_debug_level" ]] 
then
write "/sys/module/mali/parameters/mali_debug_level" "0"
fi

if [[ -e "/sys/module/logger/parameters/log_mode" ]] 
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [[ -e "/sys/module/printk/parameters/console_suspend" ]] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING LMK TWEAKS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# LMK Tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDTUNE TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune Tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "1"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "1"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING FS TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler tweaks. 
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "WAKEUP_PREEMPTION"

fi
done
 
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Chain disable.
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done
 
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for GSM in /proc/sys/kernel/
do
write "${GSM}sched_child_runs_first" "1"
write "${GSM}perf_cpu_time_max_percent" "5"
write "${GSM}sched_autogroup_enabled" "1"
write "${GSM}random/read_wakeup_threshold" "64"
write "${GSM}random/write_wakeup_threshold" "256"
write "${GSM}random/urandom_min_reseed_secs" "90"
write "${GSM}sched_tunable_scaling" "0"
write "${GSM}sched_latency_ns" "$SCHED_PERIOD_BALANCE"
write "${GSM}sched_min_granularity_ns" "$((SCHED_PERIOD_BALANCE / SCHED_TASKS_BALANCE))"
write "${GSM}sched_wakeup_granularity_ns" "$((SCHED_PERIOD_BALANCE / 2))"
write "${GSM}sched_migration_cost_ns" "5000000"
write "${GSM}sched_min_task_util_for_colocation" "0"
write "${GSM}sched_nr_migrate" "32"
write "${GSM}sched_schedstats" "0"
write "${GSM}printk_devkmsg" "off"
done

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "10000"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU CLOCKS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set min and max clocks.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "300000"
write "${minclk}scaling_max_freq" "20000000"
fi
done

for mnclk in /sys/devices/system/cpu/cpu*/cpufreq/
do
if [[ -e "${mnclk}scaling_min_freq" ]]
then
write "${mnclk}scaling_min_freq" "300000"
write "${mnclk}scaling_max_freq" "20000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING KRAIT VOLTAGE BOOST...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and smoothness.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "10"
write "${vm}dirty_ratio" "30"
write "${vm}dirty_expire_centisecs" "3000"
write "${vm}dirty_writeback_centisecs" "0"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "60"
write "${vm}swappiness" "100"
write "${vm}vfs_cache_pressure" "100"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM_THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "0"
write /sys/module/msm_thermal/core_control/enabled "1"
write /sys/module/msm_thermal/parameters/enabled "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING POWER EFFICIENT WORKQUEUE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable power efficient workqueue.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W.
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING TOUCH BOOST...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable touch boost on balance and battery profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "0"
fi

if [[ -e /sys/power/pnpmgr/touch_boost ]]
then
write "/sys/power/pnpmgr/touch_boost" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_no_metrics_save" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l); do
write "$i/tx_queue_len" 1000
done;

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING LPM SLEEP...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable LPM sleep in balanced / battery profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING PM2 IDLE SLEEP MODE...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/pm2/parameters/idle_sleep_mode" ]] 
then
write "/sys/module/pm2/parameters/idle_sleep_mode" "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LCD POWER REDUCE...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING GENTLE FAIR SLEEPERS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FORCE FAST CHARGING...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

pm disable com.google.android.gms/com.google.android.gms.auth.managed.admin.DeviceAdminReceiver
pm disable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver
pm disable com.google.android.gms/.ads.settings.AdsSettingsActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorMapActivity
pm disable com.google.android.gms/com.google.android.location.settings.ActivityRecognitionPermissionActivity
pm disable com.google.android.gms/com.google.android.location.settings.GoogleLocationSettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationHistorySettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationSettingsCheckerActivity
pm disable com.google.android.gms/.usagereporting.settings.UsageReportingActivity
pm disable com.google.android.gms/.ads.adinfo.AdvertisingInfoContentProvider
pm disable com.google.android.gms/com.google.android.location.reporting.service.ReportingContentProvider
pm disable com.google.android.gms/com.google.android.location.internal.LocationContentProvider
pm disable com.google.android.gms/.common.stats.net.contentprovider.NetworkUsageContentProvider
pm disable com.google.android.gms/com.google.android.gms.ads.config.GServicesChangedReceiver
pm disable com.google.android.gms/com.google.android.contextmanager.systemstate.SystemStateReceiver
pm disable com.google.android.gms/.ads.jams.SystemEventReceiver
pm disable com.google.android.gms/.ads.config.FlagsReceiver
pm disable com.google.android.gms/.ads.social.DoritosReceiver
pm disable com.google.android.gms/.analytics.AnalyticsReceiver
pm disable com.google.android.gms/.analytics.internal.GServicesChangedReceiver
pm disable com.google.android.gms/.common.analytics.CoreAnalyticsReceiver
pm disable com.google.android.gms/.common.stats.GmsCoreStatsServiceLauncher
pm disable com.google.android.gms/com.google.android.location.internal.AnalyticsSamplerReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ActiveReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ClockworkFallbackReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ImposeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gms/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateActivity
pm disable com.google.android.gsf/.update.SystemUpdatePanoActivity
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$Receiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gsf/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$SecretCodeReceiver
pm disable com.google.android.gsf/.checkin.CheckinService
pm disable com.google.android.gsf/.checkin.EventLogService
pm disable com.google.android.gsf/.update.SystemUpdateService
pm disable com.google.android.apps.wellbeing/.powerstate.impl.PowerStateJobService
pm disable com.google.android.apps.wellbeing/androidx.work.impl.background.systemjob.SystemJobService

# Disable GMS and IMS run in startup and restart it on boot
cmd appops set com.google.android.gms BOOT_COMPLETED ignore
cmd appops set com.google.android.ims BOOT_COMPLETED ignore

# Disable GMS and IMS run in startup and restart it on boot (custom permissions for Oxygen OS)
cmd appops set com.google.android.gms AUTO_START ignore
cmd appops set com.google.android.ims AUTO_START ignore

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $GSM_profile PROFILE APPLIED WITH SUCCESS.                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ $(getprop persist.sys.locale) == "en-US" ]]
then
toasten1
     	
elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
then
toasten1

elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
then
toastpt1
     	
elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
then
toastin1

elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
then
toasttr1

elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
then
toastfr1

elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
then
toastfr1

else
toasten1
fi
};;
    # Extreme Profile
        "Extreme") {
        	init=$(date +%s)
        	if [[ $(getprop persist.sys.locale) == "en-US" ]]
       	then
       	toasten
       	
       	elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
       	then
           toasten
           
       	elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
       	then
       	toastpt
     	
       	elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
       	then
       	toastin
       	
       	elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
       	then
       	toasttr
       	
       	elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
       	then
       	toastfr

       	elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
       	then
       	toastfr

       	else
       	toasten
       	fi
       	
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            🕛 Date of execution: $(date)                                                                                   " 
kmsg1 "                                            🔧 Kernel: `uname -a`                                                                                           "
kmsg1 "                                            🛠️ SOC: $soc                                                                                                    "
kmsg1 "                                            ⚙️ SDK: $sdk                                                                                                    "
kmsg1 "                                            🅰️ndroid Version: $arv                                                                                          "
kmsg1 "                                            📱 Device: $dm                                                                                                  "
kmsg1 "                                            👑 GSM Version: 1.9.0                                                                                           "
kmsg1 "                                            🧬 Battery design capacity: $bdc mAh                                                                            "
kmsg1 "                                            🔋 Battery actual capacity: $(( bdc * percentage/100 )) mAh available ($percentage%)                            "
kmsg1 "                                            🔐 SELinux: $selinuxstate                                                                                       "
kmsg1 "                                            💾 Device RAM: $totalram MB                                                                                     "
kmsg1 "                                            👺 Magisk: $magisk                                                                                              "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"
		
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING THERMAL-ENGINE, THERMALD AND ENABLING PERFD...                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
        	
# Enable perfd, disable thermald and thermal-engine.
start perfd
stop thermald
stop thermal-engine

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING STATSD AND LOGD...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable logd and statsd to reduce overhead.
stop logd
stop statsd

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU_BOOST...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/cpu_boost" ]]
then
write "/sys/module/cpu_boost/parameters/dynamic_stune_boost" "40"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU INPUT BOOST...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Caf CPU Boost
for caf in /sys/module/cpu_boost/parameters/
do
if [[ -d "/sys/module/cpu_boost" ]]
then
write "${caf}input_boost_freq" "0:$UINT_MAX 1:$UINT_MAX 2:$UINT_MAX 3:$UINT_MAX 4:$UINT_MAX 5:$UINT_MAX 6:$UINT_MAX 7:$UINT_MAX"
write "${caf}input_boost_ms" "64"
fi
done

# CPU Boost
for cib in /sys/module/cpu_input_boost/parameters/
do
if [[ -d "/sys/module/cpu_input_boost" ]]
then
write "${cib}input_boost_duration" "64"
write "${cib}input_boost_freq_hp" "$UINT_MAX"
write "${cib}input_boost_freq_lp" "$UINT_MAX"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 512
write "${queue}iosched/low_latency" 0
write "${queue}nomerges" 2
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 256
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}schedutil/hispeed_load" "80"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}interactive/boost" "1"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/use_migration_notif" "1"
write "${cpu}interactive/ignore_hispeed_on_notif" "1"
write "${cpu}interactive/use_sched_load" "1"
write "${cpu}interactive/boostpulse" "0"
write "${cpu}interactive/fastlane" "1"
write "${cpu}interactive/fast_ramp_down" "0"
write "${cpu}interactive/sampling_rate" "10000"
write "${cpu}interactive/sampling_rate_min" "10000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}interactive/go_hispeed_load" "80"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done
	
write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks.
write "$gpu/throttling" "0"
write "$gpu/thermal_pwrlevel" "0"
write "$gpu/devfreq/adrenoboost" "1"
write "$gpu/force_no_nap" "0"
write "$gpu/bus_split" "1"
write "$gpu/devfreq/min_freq" "100000000"
write "$gpu/devfreq/max_freq" "$UINT_MAX"
write "$gpu/default_pwrlevel" "3"
write "$gpu/force_bus_on" "0"
write "$gpu/force_clk_on" "0"
write "$gpu/force_rail_on" "0"
write "$gpu/devfreq/polling_interval" "10"
write "$gpu/idle_timer" "196"

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]] 
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "0"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "5000"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "15"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "15"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [ -e /sys/module/logger/parameters/log_mode ]
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [ -e /sys/module/printk/parameters/console_suspend ] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING LMK TWEAKS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# LMK Tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDTUNE TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune Tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "25"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "50"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING FS TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS Tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler features.
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "NO_WAKEUP_PREEMPTION"

fi
done
	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Tweaks
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for GSM in /proc/sys/kernel/
do
write "${GSM}sched_child_runs_first" "0"
write "${GSM}perf_cpu_time_max_percent" "25"
write "${GSM}sched_autogroup_enabled" "0"
write "${GSM}random/read_wakeup_threshold" "64"
write "${GSM}random/write_wakeup_threshold" "896"
write "${GSM}random/urandom_min_reseed_secs" "90"
write "${GSM}sched_tunable_scaling" "0"
write "${GSM}sched_latency_ns" "$SCHED_PERIOD_THROUGHPUT"
write "${GSM}sched_min_granularity_ns" "$((SCHED_PERIOD_THROUGHPUT / SCHED_TASKS_THROUGHPUT))"
write "${GSM}sched_wakeup_granularity_ns" "$((SCHED_PERIOD_THROUGHPUT / 2))"
write "${GSM}sched_migration_cost_ns" "5000000"
write "${GSM}sched_min_task_util_for_colocation" "0"
write "${GSM}sched_nr_migrate" "128"
write "${GSM}sched_schedstats" "0"
write "${GSM}printk_devkmsg" "off"
done

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "2000"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU CLOCKS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set max clocks in gaming / performance profile.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "20000000"
write "${minclk}scaling_max_freq" "20000000"
fi
done

for mnclk in /sys/devices/system/cpu/cpu*/cpufreq/
do
if [[ -e "${mnclk}scaling_min_freq" ]]
then
write "${mnclk}scaling_min_freq" "20000000"
write "${mnclk}scaling_max_freq" "20000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         DISABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING KRAIT VOLTAGE BOOST...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and performance.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "10"
write "${vm}dirty_ratio" "30"
write "${vm}dirty_expire_centisecs" "750"
write "${vm}dirty_writeback_centisecs" "0"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "60"
write "${vm}swappiness" "100"
write "${vm}vfs_cache_pressure" "80"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM_THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "0"
write /sys/module/msm_thermal/core_control/enabled "0"
write /sys/module/msm_thermal/parameters/enabled "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING POWER EFFICIENT WORKQUEUE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Workqueue disable power_efficient.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "N" 
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING TOUCH BOOST...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable touch boost on gaming and performance profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "1"
fi

if [[ -e /sys/power/pnpmgr/touch_boost ]]
then
write "/sys/power/pnpmgr/touch_boost" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_no_metrics_save" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l); do
write "$i/tx_queue_len" 1000
done;

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          CHANGING TASKS CGROUP AND NICE...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

change_task_cgroup "com.futuremark.dmandroid.application" "top-app" "cpuset"
change_task_cgroup "com.futuremark.dmandroid.application" "top-app" "stune"
change_task_cgroup "skynet.cputhrottlingtest" "top-app" "cpuset"
change_task_cgroup "skynet.cputhrottlingtest" "top-app" "stune"
change_task_cgroup "com.primatelabs.geekbench5" "top-app" "cpuset"
change_task_cgroup "com.primatelabs.geekbench5" "top-app" "stune"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING BATTERY SAVER...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable battery saver
for bs in /sys/module/battery_saver/parameters/
do
if [[ -d "/sys/module/battery_saver" ]]
then
write "${bs}enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ARCH POWER...                                                                                "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable arch power
if [[ -e "/sys/kernel/sched/arch_power" ]] 
then
write "/sys/kernel/sched/arch_power" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LPM SLEEP...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
  
# Disable LPM in gaming profile / performance profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING PM2 IDLE SLEEP MODE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/pm2/parameters/idle_sleep_mode" ]] 
then
write "/sys/module/pm2/parameters/idle_sleep_mode" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LCD POWER REDUCE..                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING GENTLE FAIR SLEEPERS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FORCE FAST CHARGING...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 by revWhiteShadow
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

pm disable com.google.android.gms/com.google.android.gms.auth.managed.admin.DeviceAdminReceiver
pm disable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver
pm disable com.google.android.gms/.ads.settings.AdsSettingsActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorMapActivity
pm disable com.google.android.gms/com.google.android.location.settings.ActivityRecognitionPermissionActivity
pm disable com.google.android.gms/com.google.android.location.settings.GoogleLocationSettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationHistorySettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationSettingsCheckerActivity
pm disable com.google.android.gms/.usagereporting.settings.UsageReportingActivity
pm disable com.google.android.gms/.ads.adinfo.AdvertisingInfoContentProvider
pm disable com.google.android.gms/com.google.android.location.reporting.service.ReportingContentProvider
pm disable com.google.android.gms/com.google.android.location.internal.LocationContentProvider
pm disable com.google.android.gms/.common.stats.net.contentprovider.NetworkUsageContentProvider
pm disable com.google.android.gms/com.google.android.gms.ads.config.GServicesChangedReceiver
pm disable com.google.android.gms/com.google.android.contextmanager.systemstate.SystemStateReceiver
pm disable com.google.android.gms/.ads.jams.SystemEventReceiver
pm disable com.google.android.gms/.ads.config.FlagsReceiver
pm disable com.google.android.gms/.ads.social.DoritosReceiver
pm disable com.google.android.gms/.analytics.AnalyticsReceiver
pm disable com.google.android.gms/.analytics.internal.GServicesChangedReceiver
pm disable com.google.android.gms/.common.analytics.CoreAnalyticsReceiver
pm disable com.google.android.gms/.common.stats.GmsCoreStatsServiceLauncher
pm disable com.google.android.gms/com.google.android.location.internal.AnalyticsSamplerReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ActiveReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ClockworkFallbackReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ImposeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gms/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateActivity
pm disable com.google.android.gsf/.update.SystemUpdatePanoActivity
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$Receiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gsf/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$SecretCodeReceiver
pm disable com.google.android.gsf/.checkin.CheckinService
pm disable com.google.android.gsf/.checkin.EventLogService
pm disable com.google.android.gsf/.update.SystemUpdateService
pm disable com.google.android.apps.wellbeing/.powerstate.impl.PowerStateJobService
pm disable com.google.android.apps.wellbeing/androidx.work.impl.background.systemjob.SystemJobService

# Disable GMS and IMS run in startup and restart it on boot
cmd appops set com.google.android.gms BOOT_COMPLETED ignore
cmd appops set com.google.android.ims BOOT_COMPLETED ignore

# Disable GMS and IMS run in startup and restart it on boot (custom permissions for Oxygen OS)
cmd appops set com.google.android.gms AUTO_START ignore
cmd appops set com.google.android.ims AUTO_START ignore

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $GSM_profile PROFILE APPLIED WITH SUCCESS.                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ $(getprop persist.sys.locale) == "en-US" ]]
then
toasten1
     	
elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
then
toasten1

elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
then
toastpt1
     	
elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
then
toastin1

elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
then
toasttr1

elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
then
toastfr1

elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
then
toastfr1

else
toasten1
fi
};;
    # Battery Profile
        "Battery") {
        	init=$(date +%s)
        	if [[ $(getprop persist.sys.locale) == "en-US" ]]
     	   then
        	toasten
        	
        	elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
            then
            toasten
         
        	elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
        	then
        	toastpt
     	
        	elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
        	then
        	toastin
        	
        	elif [[ $(getprop persist.sys.locale) == "tr-TR" ]] 
        	then
        	toasttr
        	
        	elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
        	then
        	toastfr
        	
        	elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
        	then
        	toastfr

        	else
        	toasten
        	fi
        	
kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            🕛 Date of execution: $(date)                                                                                   " 
kmsg1 "                                            🔧 Kernel: `uname -a`                                                                                           "
kmsg1 "                                            🛠️ SOC: $soc                                                                                                    "
kmsg1 "                                            ⚙️ SDK: $sdk                                                                                                    "
kmsg1 "                                            🅰️ndroid Version: $arv                                                                                          "
kmsg1 "                                            📱 Device: $dm                                                                                                  "
kmsg1 "                                            👑 GSM Version: 1.9.0                                                                                           "
kmsg1 "                                            🧬 Battery design capacity: $bdc mAh                                                                            "
kmsg1 "                                            🔋 Battery actual capacity: $(( bdc * percentage/100 )) mAh available ($percentage%)                            "
kmsg1 "                                            🔐 SELinux: $selinuxstate                                                                                       "
kmsg1 "                                            💾 Device RAM: $totalram MB                                                                                     "
kmsg1 "                                            👺 Magisk: $magisk                                                                                              "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING $GSM_profile PROFILE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING THERMAL-ENGINE, THERMALD AND PERFD...                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
        	
# Enable perfd, thermald and thermal-engine.
start perfd
start thermald
start thermal-engine
    
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING STATSD AND LOGD...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable logd and statsd to reduce overhead.
stop logd
stop statsd

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU_BOOST...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/cpu_boost" ]]
then
write "/sys/module/cpu_boost/parameters/dynamic_stune_boost" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 128
write "${queue}iosched/low_latency" 1
write "${queue}nomerges" 2
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 64
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD_BATTERY / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD_BATTERY / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD_BATTERY / 1000))"
write "${cpu}schedutil/hispeed_load" "99"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD_BATTERY / 1000))"
write "${cpu}interactive/boost" "0"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/use_migration_notif" "1" 
write "${cpu}interactive/ignore_hispeed_on_notif" "1"
write "${cpu}interactive/use_sched_load" "1"
write "${cpu}interactive/boostpulse" "0"
write "${cpu}interactive/fastlane" "1"
write "${cpu}interactive/fast_ramp_down" "1"
write "${cpu}interactive/sampling_rate" "42000"
write "${cpu}interactive/sampling_rate_min" "42000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD_BATTERY / 1000))"
write "${cpu}interactive/go_hispeed_load" "99"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done

if [[ $percentage -le "20" ]]
then
write "/sys/devices/system/cpu/cpu1/online" "0"
write "/sys/devices/system/cpu/cpu2/online" "0"
write "/sys/devices/system/cpu/cpu5/online" "0"
write "/sys/devices/system/cpu/cpu6/online" "0"

elif [[ $percentage -ge "20" ]]
then
write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks
write "$gpu/throttling" "1"
write "$gpu/thermal_pwrlevel" "3"
write "$gpu/devfreq/adrenoboost" "0"
write "$gpu/force_no_nap" "0"
write "$gpu/bus_split" "1"
write "$gpu/devfreq/min_freq" "100000000"
write "$gpu/default_pwrlevel" "6"
write "$gpu/force_bus_on" "0"
write "$gpu/force_clk_on" "0"
write "$gpu/force_rail_on" "0"
write "$gpu/devfreq/polling_interval" "26"
write "$gpu/idle_timer" "36"

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]] 
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "0"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

# Set max clock to 600 mhz in battery profile if battery < than 20%.
if [[ $percentage -le "50" ]]
then
write "$gpu/devfreq/max_freq" "600000000"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "Y"
write "/sys/module/adreno_idler/parameters/adreno_idler_idleworkload" "10000"
write "/sys/module/adreno_idler/parameters/adreno_idler_downdifferential" "35"
write "/sys/module/adreno_idler/parameters/adreno_idler_idlewait" "25"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [ -e /sys/module/logger/parameters/log_mode ]
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [ -e /sys/module/printk/parameters/console_suspend ] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING LMK TWEAKS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# LMK Tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDTUNE TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "1"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "1"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING FS TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS Tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done
    
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler features.
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "NO_WAKEUP_PREEMPTION"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "ARCH_POWER" 

fi
done
	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Tweaks
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for GSM in /proc/sys/kernel/
do
write "${GSM}sched_child_runs_first" "1"
write "${GSM}perf_cpu_time_max_percent" "1"
write "${GSM}sched_autogroup_enabled" "1"
write "${GSM}random/read_wakeup_threshold" "64"
write "${GSM}random/write_wakeup_threshold" "128"
write "${GSM}random/urandom_min_reseed_secs" "90"
write "${GSM}sched_tunable_scaling" "0"
write "${GSM}sched_latency_ns" "$SCHED_PERIOD_BATTERY"
write "${GSM}sched_min_granularity_ns" "$((SCHED_PERIOD_BATTERY / SCHED_TASKS_BATTERY))"
write "${GSM}sched_wakeup_granularity_ns" "$((SCHED_PERIOD_BATTERY / 2))"
write "${GSM}sched_migration_cost_ns" "5000000"
write "${GSM}sched_min_task_util_for_colocation" "0"
write "${GSM}sched_nr_migrate" "8"
write "${GSM}sched_schedstats" "0"
write "${GSM}printk_devkmsg" "off"
done

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "20000"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING FINGERPRINT BOOST...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU CLOCKS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set min and max clocks.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ $percentage -le "20" && -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "300000"
write "${minclk}scaling_max_freq" "20000000"

elif [[ $percentage -ge "20" && -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "300000"
write "${minclk}scaling_max_freq" "1300000"
fi
done

for mnclk in /sys/devices/system/cpu/cpu*/cpufreq/
do
if [[ $percentage -le "20" && -e "${mnclk}scaling_min_freq" ]]
then
write "${mnclk}scaling_min_freq" "300000"
write "${mnclk}scaling_max_freq" "20000000"

elif [[ $percentage -ge "20" && -e "${mnclk}scaling_min_freq" ]]
then
write "${mnclk}scaling_min_freq" "300000"
write "${mnclk}scaling_max_freq" "1300000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING CPUIDLE USE DEEPEST STATE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING KRAIT VOLTAGE BOOST...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# VM settings to improve overall user experience and performance.
for vm in /proc/sys/vm/
do
write "${vm}dirty_background_ratio" "5"
write "${vm}dirty_ratio" "50"
write "${vm}dirty_expire_centisecs" "3000"
write "${vm}dirty_writeback_centisecs" "0"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "60"
write "${vm}swappiness" "100"
write "${vm}vfs_cache_pressure" "100"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM_THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "1"
write /sys/module/msm_thermal/core_control/enabled "1"
write /sys/module/msm_thermal/parameters/enabled "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING POWER EFFICIENT WORKQUEUE...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Workqueue enable power_efficient.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING TOUCH BOOST...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable touch boost on battery and balance profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "0"
fi

if [[ -e /sys/power/pnpmgr/touch_boost ]]
then
write "/sys/power/pnpmgr/touch_boost" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_no_metrics_save" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l); do
write "$i/tx_queue_len" 1000
done;

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING BATTERY SAVER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable battery saver
for bs in /sys/module/battery_saver/parameters/
do
if [[ -d "/sys/module/battery_saver" ]]
then
write "${bs}enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING LPM SLEEP...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable LPM in battery / balanced profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "Y"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "Y"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING LCD POWER REDUCE...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING GENTLE FAIR SLEEPERS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FORCE FAST CHARGING...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 by revWhiteShadow
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

pm disable com.google.android.gms/com.google.android.gms.auth.managed.admin.DeviceAdminReceiver
pm disable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver
pm disable com.google.android.gms/.ads.settings.AdsSettingsActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorMapActivity
pm disable com.google.android.gms/com.google.android.location.settings.ActivityRecognitionPermissionActivity
pm disable com.google.android.gms/com.google.android.location.settings.GoogleLocationSettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationHistorySettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationSettingsCheckerActivity
pm disable com.google.android.gms/.usagereporting.settings.UsageReportingActivity
pm disable com.google.android.gms/.ads.adinfo.AdvertisingInfoContentProvider
pm disable com.google.android.gms/com.google.android.location.reporting.service.ReportingContentProvider
pm disable com.google.android.gms/com.google.android.location.internal.LocationContentProvider
pm disable com.google.android.gms/.common.stats.net.contentprovider.NetworkUsageContentProvider
pm disable com.google.android.gms/com.google.android.gms.ads.config.GServicesChangedReceiver
pm disable com.google.android.gms/com.google.android.contextmanager.systemstate.SystemStateReceiver
pm disable com.google.android.gms/.ads.jams.SystemEventReceiver
pm disable com.google.android.gms/.ads.config.FlagsReceiver
pm disable com.google.android.gms/.ads.social.DoritosReceiver
pm disable com.google.android.gms/.analytics.AnalyticsReceiver
pm disable com.google.android.gms/.analytics.internal.GServicesChangedReceiver
pm disable com.google.android.gms/.common.analytics.CoreAnalyticsReceiver
pm disable com.google.android.gms/.common.stats.GmsCoreStatsServiceLauncher
pm disable com.google.android.gms/com.google.android.location.internal.AnalyticsSamplerReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ActiveReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ClockworkFallbackReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ImposeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gms/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateActivity
pm disable com.google.android.gsf/.update.SystemUpdatePanoActivity
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$Receiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gsf/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$SecretCodeReceiver
pm disable com.google.android.gsf/.checkin.CheckinService
pm disable com.google.android.gsf/.checkin.EventLogService
pm disable com.google.android.gsf/.update.SystemUpdateService
pm disable com.google.android.apps.wellbeing/.powerstate.impl.PowerStateJobService
pm disable com.google.android.apps.wellbeing/androidx.work.impl.background.systemjob.SystemJobService

# Disable GMS and IMS run in startup and restart it on boot
cmd appops set com.google.android.gms BOOT_COMPLETED ignore
cmd appops set com.google.android.ims BOOT_COMPLETED ignore

# Disable GMS and IMS run in startup and restart it on boot (custom permissions for Oxygen OS)
cmd appops set com.google.android.gms AUTO_START ignore
cmd appops set com.google.android.ims AUTO_START ignore

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $GSM_profile PROFILE APPLIED WITH SUCCESS.                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ $(getprop persist.sys.locale) == "en-US" ]]
then
toasten1
  
elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
then
toasten1

elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
then
toastpt1
     	
elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
then
toastin1

elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
then
toasttr1

elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
then
toastfr1

elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
then
toastfr1

else
toasten1
fi
};;
    # Gaming Profile
        "Gaming") {
        	init=$(date +%s)
        	if [[ $(getprop persist.sys.locale) == "en-US" ]]
        	then
        	toasten
     	
        	elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
            then
            toasten
            
        	elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
        	then
        	toastpt
        	
        	elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
        	then
        	toastin
        	
        	elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
     	   then
        	toasttr

        	elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
        	then
        	toastfr

        	elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
        	then
        	toastfr

        	else
        	toasten
        	fi
        	
        	kmsg1 "----------------------------------------------------- Info -------------------------------------------------------------------------------------------------"
kmsg1 "                                            🕛 Date of execution: $(date)                                                                                   " 
kmsg1 "                                            🔧 Kernel: `uname -a`                                                                                           "
kmsg1 "                                            🛠️ SOC: $soc                                                                                                    "
kmsg1 "                                            ⚙️ SDK: $sdk                                                                                                    "
kmsg1 "                                            🅰️ndroid Version: $arv                                                                                          "
kmsg1 "                                            📱 Device: $dm                                                                                                  "
kmsg1 "                                            👑 GSM Version: 1.9.0                                                                                           "
kmsg1 "                                            🧬 Battery design capacity: $bdc mAh                                                                            "
kmsg1 "                                            🔋 Battery actual capacity: $(( bdc * percentage/100 )) mAh available ($percentage%)                            "
kmsg1 "                                            🔐 SELinux: $selinuxstate                                                                                       "
kmsg1 "                                            💾 Device RAM: $totalram MB                                                                                     "
kmsg1 "                                            👺 Magisk: $magisk                                                                                              "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING $GSM_profile PROFILE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
		
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING THERMAL-ENGINE, THERMALD AND PERFD...                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
        	
# Disable perfd, thermald and thermal-engine.
stop perfd
stop thermald
stop thermal-engine

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING STATSD AND LOGD...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable logd and statsd to reduce overhead.
stop logd
stop statsd

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU_BOOST...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/cpu_boost" ]]
then
write "/sys/module/cpu_boost/parameters/dynamic_stune_boost" "40"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING CPU INPUT BOOST...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Caf CPU Boost
for caf in /sys/module/cpu_boost/parameters/
do
if [[ -d "/sys/module/cpu_boost" ]]
then
write "${caf}input_boost_freq" "0:$UINT_MAX 1:$UINT_MAX 2:$UINT_MAX 3:$UINT_MAX 4:$UINT_MAX 5:$UINT_MAX 6:$UINT_MAX 7:$UINT_MAX"
write "${caf}input_boost_ms" "64"
fi
done

# CPU Boost
for cib in /sys/module/cpu_input_boost/parameters/
do
if [[ -d "/sys/module/cpu_input_boost" ]]
then
write "${cib}input_boost_duration" "64"
write "${cib}input_boost_freq_hp" "$UINT_MAX"
write "${cib}input_boost_freq_lp" "$UINT_MAX"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING I/O SCHEDULER...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# I/O Scheduler Tweaks.
for queue in /sys/block/*/queue/
do
write "${queue}add_random" 0
write "${queue}iostats" 0
write "${queue}read_ahead_kb" 512
write "${queue}iosched/low_latency" 0
write "${queue}nomerges" 2
write "${queue}rq_affinity" 2
write "${queue}nr_requests" 256
done

# Reserve 90% IO bandwith for foreground tasks
if [[ -d "/dev/blkio" ]]
then
write "/dev/blkio/blkio.weight" "1000"
write "/dev/blkio/blkio.leaf_weight" "1000"
write "/dev/blkio/background/blkio.weight" "100"
write "/dev/blkio/background/blkio.leaf_weight" "100"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         TWEAKING CPU...                                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# CPU Tweaks
for cpu in /sys/devices/system/cpu/cpu*/cpufreq/
do
avail_govs=`cat "${cpu}scaling_available_governors"`
if [[ "$avail_govs" == *"schedutil"* ]]
then
write "${cpu}scaling_governor" schedutil
write "${cpu}schedutil/up_rate_limit_us" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}schedutil/down_rate_limit_us" "$((4 * SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}schedutil/iowait_boost_enable" "0"
write "${cpu}schedutil/rate_limit_us" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}schedutil/hispeed_load" "80"
write "${cpu}schedutil/hispeed_freq" "$UINT_MAX"
elif [[ "$avail_govs" == *"interactive"* ]]
then
write "${cpu}scaling_governor" interactive
write "${cpu}interactive/timer_rate" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}interactive/boost" "1"
write "${cpu}interactive/timer_slack" "-1"
write "${cpu}interactive/use_migration_notif" "1"
write "${cpu}interactive/ignore_hispeed_on_notif" "1"
write "${cpu}interactive/use_sched_load" "1"
write "${cpu}interactive/boostpulse" "0"
write "${cpu}interactive/fastlane" "1"
write "${cpu}interactive/fast_ramp_down" "0"
write "${cpu}interactive/sampling_rate" "10000"
write "${cpu}interactive/sampling_rate_min" "10000"
write "${cpu}interactive/min_sample_time" "$((SCHED_PERIOD_THROUGHPUT / 1000))"
write "${cpu}interactive/go_hispeed_load" "80"
write "${cpu}interactive/hispeed_freq" "$UINT_MAX"
fi
done

write "/sys/devices/system/cpu/cpu1/online" "1"
write "/sys/devices/system/cpu/cpu2/online" "1"
write "/sys/devices/system/cpu/cpu5/online" "1"
write "/sys/devices/system/cpu/cpu6/online" "1"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING GPU...                                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
	
# GPU Tweaks.
write "$gpu/throttling" "0"
write "$gpu/thermal_pwrlevel" "0"
write "$gpu/devfreq/adrenoboost" "2"
write "$gpu/force_no_nap" "1"
write "$gpu/bus_split" "0"
write "$gpu/devfreq/min_freq" "100000000"
write "$gpu/devfreq/max_freq" "$UINT_MAX"
write "$gpu/default_pwrlevel" "0"
write "$gpu/force_bus_on" "1"
write "$gpu/force_clk_on" "1"
write "$gpu/force_rail_on" "1"
write "$gpu/devfreq/polling_interval" "5"
write "$gpu/idle_timer" "1050"

if [[ -e "/proc/gpufreq/gpufreq_limited_thermal_ignore" ]]
then
write "/proc/gpufreq/gpufreq_limited_thermal_ignore" "1"
fi

# Enable dvfs
if [[ -e "/proc/mali/dvfs_enable" ]] 
then
write "/proc/mali/dvfs_enable" "1"
fi

if [[ -e "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" ]] 
then
write "/sys/module/pvrsrvkm/parameters/gpu_dvfs_enable" "1"
fi

if [[ -e "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" ]]
then
write "/sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING AND TWEAKING ADRENO IDLER...                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable and tweak adreno idler
if [[ -d "/sys/module/adreno_idler" ]]
then
write "/sys/module/adreno_idler/parameters/adreno_idler_active" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING DEBUGGERS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable debuggers.
for bl in /sys/module/bluetooth/parameters/
do
if [[ -e "${bl}disable_ertm" ]]
then
write "${bl}disable_ertm" "Y"
write "${bl}disable_esco" "Y"
fi
done

write "/sys/module/earlysuspend/parameters/debug_mask" "0"
write "/sys/module/alarm/parameters/debug_mask" "0"
write "/sys/module/alarm_dev/parameters/debug_mask" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/devices/system/edac/cpu/log_ce" "0"
write "/sys/devices/system/edac/cpu/log_ue" "0"
write "/sys/module/binder/parameters/debug_mask" "0"
write "/sys/module/debug/parameters/enable_event_log" "0"
write "/sys/module/dwc3/parameters/ep_addr_rxdbg_mask" "0"
write "/sys/module/dwc3/parameters/ep_addr_txdbg_mask" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ce" "0"
write "/sys/module/edac_core/parameters/edac_mc_log_ue" "0"
write "/sys/module/glink/parameters/debug_mask" "0"
write "/sys/module/hid_apple/parameters/fnmode" "0"
write "/sys/module/hid_magicmouse/parameters/emulate_3button" "N"
write "/sys/module/hid_magicmouse/parameters/emulate_scroll_wheel" "N"
write "/sys/module/ip6_tunnel/parameters/log_ecn_error" "N"
write "/sys/module/lowmemorykiller/parameters/debug_level" "0"
write "/sys/module/mdss_fb/parameters/backlight_dimmer" "N"
write "/sys/module/msm_show_resume_irq/parameters/debug_mask" "0"
write "/sys/module/msm_smd/parameters/debug_mask" "0"
write "/sys/module/msm_smem/parameters/debug_mask" "0"
write "/sys/module/otg_wakelock/parameters/enabled" "N" 
write "/sys/module/service_locator/parameters/enable" "0"
write "/sys/module/sit/parameters/log_ecn_error" "N"
write "/sys/module/smem_log/parameters/log_enable" "0"
write "/sys/module/smp2p/parameters/debug_mask" "0"
write "/sys/module/touch_core_base/parameters/debug_mask" "0"
write "/sys/module/usb_bam/parameters/enable_event_log" "0"
write "/sys/module/printk/parameters/console_suspend" "Y"
write "/proc/sys/debug/exception-trace" "0"
write "/proc/sys/kernel/printk" "0 0 0 0"
write "/proc/sys/kernel/compat-log" "0"

if [ -e /sys/module/logger/parameters/log_mode ]
then
write "/sys/module/logger/parameters/log_mode" "2"
fi

if [ -e /sys/module/printk/parameters/console_suspend ] 
then
write "/sys/module/printk/parameters/console_suspend" "Y"
fi

for i in $(find /sys/ -name debug_mask)
do
write "$i" "0"
done

for i in $(find /sys/ -name debug_level)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ce)
do
write "$i" "0"
done

for i in $(find /sys/ -name edac_mc_log_ue)
do
write "$i" "0"
done

for i in $(find /sys/ -name enable_event_log) 
do
write "$i" "0"
done

for i in $(find /sys/ -name log_ecn_error)
do
write "$i" "N"
done

for i in $(find /sys/ -name snapshot_crashdumper)
do
write "$i" "0"
done

if [[ -e "/sys/module/ext4/parameters/mballoc_debug" ]] 
then
write "/sys/module/ext4/parameters/mballoc_debug" "0"
fi

# =========
# FIX DEEPSLEEP
# =========
for i in $(ls /sys/class/scsi_disk/)
do
lock_val 'temporary none' '/sys/class/scsi_disk/$i/cache_type'
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING LMK TWEAKS...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# LMK Tweaks.
for lmk in /sys/module/lowmemorykiller/parameters/
do
if [[ -d "/sys/module/lowmemorykiller" ]]
then
write "${lmk}enable_lmk" "1"
write "${lmk}enable_adaptive_lmk" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                            APPLYING SCHEDTUNE TWEAKS...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Schedtune Tweaks
for st in /dev/stune
do
if [[ -d "/dev/stune" ]]
then
write "${st}/background/schedtune.boost" "0"
write "${st}/background/schedtune.prefer_idle" "0"

write "${st}/foreground/schedtune.boost" "25"
write "${st}/foreground/schedtune.prefer_idle" "1"

write "${st}/rt/schedtune.boost" "0"
write "${st}/rt/schedtune.prefer_idle" "0"

write "${st}/top-app/schedtune.boost" "50"
write "${st}/top-app/schedtune.prefer_idle" "1"

write "${st}/schedtune.boost" "0"
write "${st}/schedtune.prefer_idle" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                            APPLYING FS TWEAKS...                                                                                "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# FS Tweaks.
for fs in /proc/sys/fs/
do
if [[ -d "/proc/sys/fs" ]]
then
write "${fs}dir-notify-enable" "0"
write "${fs}lease-break-time" "20"
write "${fs}leases-enable" "1"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING DYNAMIC FSYNC...                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable dynamic_fsync.
if [[ -e "/sys/kernel/dyn_fsync/Dyn_fsync_active" ]]
then
chmod 666 /sys/kernel/dyn_fsync/Dyn_fsync_active
chown root /sys/kernel/dyn_fsync/Dyn_fsync_active
write "/sys/kernel/dyn_fsync/Dyn_fsync_active" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING SCHEDULER TWEAKS...                                                                           "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Scheduler features.
for sched in /sys/kernel/debug/
do
if [[ -e "/sys/kernel/debug/sched_features" ]]
then
write "${sched}sched_features" "NEXT_BUDDY"
write "${sched}sched_features" "TTWU_QUEUE"
write "${sched}sched_features" "NO_GENTLE_FAIR_SLEEPERS"
write "${sched}sched_features" "NO_WAKEUP_PREEMPTION"

fi
done
	
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ONEPLUS CHAIN...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# OP Tweaks
for opc in /sys/module/opchain/parameters/
do
if [[ -d "/sys/module/opchain" ]]
then
write "${opc}chain_on" "0"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          TWEAKING KERNEL SETTINGS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Tweak some kernel settings to improve overall performance.
for GSM in /proc/sys/kernel/
do
write "${GSM}sched_child_runs_first" "0"
write "${GSM}perf_cpu_time_max_percent" "25"
write "${GSM}sched_autogroup_enabled" "0"
write "${GSM}random/read_wakeup_threshold" "64"
write "${GSM}random/write_wakeup_threshold" "896"
write "${GSM}random/urandom_min_reseed_secs" "90"
write "${GSM}sched_tunable_scaling" "0"
write "${GSM}sched_latency_ns" "$SCHED_PERIOD_THROUGHPUT"
write "${GSM}sched_min_granularity_ns" "$((SCHED_PERIOD_THROUGHPUT / SCHED_TASKS_THROUGHPUT))"
write "${GSM}sched_wakeup_granularity_ns" "$((SCHED_PERIOD_THROUGHPUT / 2))"
write "${GSM}sched_migration_cost_ns" "5000000"
write "${GSM}sched_min_task_util_for_colocation" "0"
write "${GSM}sched_nr_migrate" "128"
write "${GSM}sched_schedstats" "0"
write "${GSM}printk_devkmsg" "off"
done

if [[ -e "/sys/power/pm_freeze_timeout" ]] 
then
write "/sys/power/pm_freeze_timeout" "2000"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING FINGERPRINT BOOST...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable fingerprint boost.
if [[ -e "/sys/kernel/fp_boost/enabled" ]]
then
write "/sys/kernel/fp_boost/enabled" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          SETTING MIN AND MAX CPU CLOCKS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Set max clocks in gaming / performance profile.
for minclk in /sys/devices/system/cpu/cpufreq/policy*/
do
if [[ -e "${minclk}scaling_min_freq" ]]
then
write "${minclk}scaling_min_freq" "20000000"
write "${minclk}scaling_max_freq" "20000000"
fi
done

for mnclk in /sys/devices/system/cpu/cpu*/cpufreq/
do
if [[ -e "${mnclk}scaling_min_freq" ]]
then
write "${mnclk}scaling_min_freq" "20000000"
write "${mnclk}scaling_max_freq" "20000000"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING CPUIDLE USE DEEPEST STATE...                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/devices/system/cpu/cpuidle/use_deepest_state" ]] 
then
write "/sys/devices/system/cpu/cpuidle/use_deepest_state" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING KRAIT VOLTAGE BOOST...                                                                        "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable krait voltage boost
if [[ -e "/sys/module/acpuclock_krait/parameters/boost" ]] 
then
write "/sys/module/acpuclock_krait/parameters/boost" "Y"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING VM TWEAKS...                                                                                  "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

sync

# VM settings to improve overall user experience and performance.
for vm in /proc/sys/vm/
do
write "${vm}drop_caches" "3"
write "${vm}dirty_background_ratio" "10"
write "${vm}dirty_ratio" "30"
write "${vm}dirty_expire_centisecs" "200"
write "${vm}dirty_writeback_centisecs" "0"
write "${vm}page-cluster" "0"
write "${vm}stat_interval" "60"
write "${vm}swappiness" "100"
write "${vm}vfs_cache_pressure" "200"
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING MSM_THERMAL SETTINGS...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# MSM thermal
if [[ -d "/sys/module/msm_thermal" ]]
then
write /sys/module/msm_thermal/vdd_restriction/enabled "0"
write /sys/module/msm_thermal/core_control/enabled "0"
write /sys/module/msm_thermal/parameters/enabled "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING POWER EFFICIENT WORKQUEUE...                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Workqueue disable power_efficient.
for wqpw in /sys/module/workqueue/parameters/
do
if [[ -e "${wqpw}power_efficient" ]]
then 
write "${wqpw}power_efficient" "N" 
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          FIXING DOUBLE TAP TO WAKEUP...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Fix DT2W
for dt in /sys/touchpanel/
do
if [[ -e "/sys/touchpanel/double_tap" ]]
then
write "${dt}double_tap" "1"
fi
done

if [[ -e "/proc/tp_gesture" ]]
then
write "/proc/tp_gesture" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          ENABLING TOUCH BOOST...                                                                                "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable touch boost on gaming and performance profile.
if [[ -e /sys/module/msm_performance/parameters/touchboost ]]
then
write "/sys/module/msm_performance/parameters/touchboost" "1"
fi

if [[ -e /sys/power/pnpmgr/touch_boost ]]
then
write "/sys/power/pnpmgr/touch_boost" "1"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          APPLYING INTERNET TWEAKS...                                                                            "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Internet Tweaks
for tcp in /proc/sys/net/ipv4/
do
write "${tcp}ip_no_pmtu_disc" "0"
write "${tcp}tcp_ecn" "2"
write "${tcp}tcp_timestamps" "0"
write "${tcp}route.flush" "1"
write "${tcp}tcp_rfc1337" "1"
write "${tcp}tcp_tw_reuse" "1"
write "${tcp}tcp_sack" "1"
write "${tcp}tcp_fack" "1"
write "${tcp}tcp_fastopen" "3"
write "${tcp}tcp_tw_recycle" "1"
write "${tcp}tcp_no_metrics_save" "1"
write "${tcp}tcp_syncookies" "0"
write "${tcp}tcp_window_scaling" "1"
write "${tcp}tcp_keepalive_probes" "10"
write "${tcp}tcp_keepalive_intvl" "30"
write "${tcp}tcp_fin_timeout" "30"
write "${tcp}tcp_low_latency" "1"
write "${tcp}tcp_congestion_control" "bbr2"
done

# Tweak and decrease tx_queue_len default stock value(s) for less amount of generated bufferbloat and for gaining slightly faster network speed and performance;
for i in $(find /sys/class/net -type l); do
write "$i/tx_queue_len" 1000
done;

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          CHANGING TASKS CGROUP AND NICE...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

change_task_cgroup "skynet.cputhrottlingtest" "top-app" "cpuset"
change_task_cgroup "skynet.cputhrottlingtest" "top-app" "stune"
change_task_cgroup "com.ea.gp.fifamobile" "top-app" "cpuset"
change_task_cgroup "com.ea.gp.fifamobile" "top-app" "stune"
change_task_cgroup "com.ngame.allstar.eu" "top-app" "cpuset"
change_task_cgroup "com.ngame.allstar.eu" "top-app" "stune"
change_task_cgroup "com.futuremark.dmandroid.application" "top-app" "cpuset"
change_task_cgroup "com.futuremark.dmandroid.application" "top-app" "stune"
change_task_cgroup "com.primatelabs.geekbench5" "top-app" "cpuset"
change_task_cgroup "com.primatelabs.geekbench5" "top-app" "stune"
change_task_cgroup "com.dts.freefireth" "top-app" "cpuset"
change_task_cgroup "com.dts.freefireth" "top-app" "stune"
change_task_cgroup "com.garena.game.codm" "top-app" "cpuset"
change_task_cgroup "com.garena.game.codm" "top-app" "stune"
change_task_cgroup "com.activision.callofduty.shooter" "top-app" "cpuset"
change_task_cgroup "com.activision.callofduty.shooter" "top-app" "stune"
change_task_cgroup "com.riotgames.league.wildrift" "top-app" "cpuset"
change_task_cgroup "com.riotgames.league.wildrift" "top-app" "stune"
change_task_cgroup "com.mobile.legends" "top-app" "cpuset"
change_task_cgroup "com.mobile.legends" "top-app" "stune"
change_task_cgroup "com.gameloft.android.SAMS.GloftA9SS" "top-app" "cpuset"
change_task_cgroup "com.gameloft.android.SAMS.GloftA9SS" "top-app" "stune"
change_task_cgroup "com.tencent.ig" "top-app" "cpuset"
change_task_cgroup "com.tencent.ig" "top-app" "stune" 
change_task_cgroup "com.gameloft.android.ANMP.GloftA8HM" "top-app" "cpuset"
change_task_cgroup "com.gameloft.android.ANMP.GloftA8HM" "top-app" "stune" 
change_task_cgroup "com.miHoYo.GenshinImpact" "top-app" "cpuset"
change_task_cgroup "com.miHoYo.GenshinImpact" "top-app" "stune" 
change_task_cgroup "com.pearlabyss.blackdesertm.gl" "top-app" "cpuset"
change_task_cgroup "com.pearlabyss.blackdesertm.gl" "top-app" "stune" 
change_task_cgroup "com.nianticlabs.pokemongo" "top-app" "cpuset"
change_task_cgroup "com.nianticlabs.pokemongo" "top-app" "stune" 
change_task_cgroup "com.pubg.krmobile" "top-app" "cpuset"
change_task_cgroup "com.pubg.krmobile" "top-app" "stune" 
change_task_cgroup "com.rockstargames.gtasa" "top-app" "cpuset"
change_task_cgroup "com.rockstargames.gtasa" "top-app" "stune" 

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING BATTERY SAVER...                                                                             "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable battery saver
for bs in /sys/module/battery_saver/parameters/
do
if [[ -d "/sys/module/battery_saver" ]]
then
write "${bs}enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING ARCH POWER...                                                                                "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable arch power
if [[ -e "/sys/kernel/sched/arch_power" ]] 
then
write "/sys/kernel/sched/arch_power" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LPM SLEEP...                                                                                 "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Disable LPM sleep on gaming profile / performance profile
for lpm in /sys/module/lpm_levels/parameters/
do
if [[ -d "/sys/module/lpm_levels" ]]
then
write "${lpm}sleep_disabled" "Y"
write "/sys/module/lpm_levels/system/pwr/cpu0/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu1/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu2/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/cpu3/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu4/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu5/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu6/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/cpu7/ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-dynret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/pwr/pwr-l2-ret/idle_enabled" "N"
write "/sys/module/lpm_levels/system/perf/perf-l2-ret/idle_enabled" "N"
fi
done

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING PM2 IDLE SLEEP MODE...                                                                       "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/module/pm2/parameters/idle_sleep_mode" ]] 
then
write "/sys/module/pm2/parameters/idle_sleep_mode" "N"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING LCD POWER REDUCE...                                                                          "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/class/lcd/panel/power_reduce" ]] 
then
write "/sys/class/lcd/panel/power_reduce" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          DISABLING GENTLE FAIR SLEEPERS...                                                                      "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ -e "/sys/kernel/sched/gentle_fair_sleepers" ]]
then
write "/sys/kernel/sched/gentle_fair_sleepers" "0"
fi

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                         ENABLING FORCE FAST CHARGING...                                                                         "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# Enable Fast Charging Rate
for ffc in /sys/kernel/fast_charge/
do
if [[ -e "/sys/kernel/fast_charge/force_fast_charge" ]]
then
write "${ffc}force_fast_charge" "1"
fi
done
  
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          KILLING GMS PROCESSES...                                                                               "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

# GMS blocker 1.2 by revWhiteShadow
killall -9 com.google.android.gms
killall -9 com.google.android.gms.persistent
killall -9 com.google.process.gapps
killall -9 com.google.android.gsf
killall -9 com.google.android.gsf.persistent

pm disable com.google.android.gms/com.google.android.gms.auth.managed.admin.DeviceAdminReceiver
pm disable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver
pm disable com.google.android.gms/.ads.settings.AdsSettingsActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorActivity
pm disable com.google.android.gms/com.google.android.location.places.ui.aliaseditor.AliasEditorMapActivity
pm disable com.google.android.gms/com.google.android.location.settings.ActivityRecognitionPermissionActivity
pm disable com.google.android.gms/com.google.android.location.settings.GoogleLocationSettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationHistorySettingsActivity
pm disable com.google.android.gms/com.google.android.location.settings.LocationSettingsCheckerActivity
pm disable com.google.android.gms/.usagereporting.settings.UsageReportingActivity
pm disable com.google.android.gms/.ads.adinfo.AdvertisingInfoContentProvider
pm disable com.google.android.gms/com.google.android.location.reporting.service.ReportingContentProvider
pm disable com.google.android.gms/com.google.android.location.internal.LocationContentProvider
pm disable com.google.android.gms/.common.stats.net.contentprovider.NetworkUsageContentProvider
pm disable com.google.android.gms/com.google.android.gms.ads.config.GServicesChangedReceiver
pm disable com.google.android.gms/com.google.android.contextmanager.systemstate.SystemStateReceiver
pm disable com.google.android.gms/.ads.jams.SystemEventReceiver
pm disable com.google.android.gms/.ads.config.FlagsReceiver
pm disable com.google.android.gms/.ads.social.DoritosReceiver
pm disable com.google.android.gms/.analytics.AnalyticsReceiver
pm disable com.google.android.gms/.analytics.internal.GServicesChangedReceiver
pm disable com.google.android.gms/.common.analytics.CoreAnalyticsReceiver
pm disable com.google.android.gms/.common.stats.GmsCoreStatsServiceLauncher
pm disable com.google.android.gms/com.google.android.location.internal.AnalyticsSamplerReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ActiveReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ClockworkFallbackReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$ImposeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gms/.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gms/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateActivity
pm disable com.google.android.gsf/.update.SystemUpdatePanoActivity
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$Receiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$SecretCodeReceiver
pm disable com.google.android.gsf/com.google.android.gsf.checkin.CheckinService\$TriggerReceiver
pm disable com.google.android.gsf/.checkin.EventLogService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$Receiver
pm disable com.google.android.gsf/.update.SystemUpdateService\$SecretCodeReceiver
pm disable com.google.android.gsf/.checkin.CheckinService
pm disable com.google.android.gsf/.checkin.EventLogService
pm disable com.google.android.gsf/.update.SystemUpdateService
pm disable com.google.android.apps.wellbeing/.powerstate.impl.PowerStateJobService
pm disable com.google.android.apps.wellbeing/androidx.work.impl.background.systemjob.SystemJobService

# Disable GMS and IMS run in startup and restart it on boot
cmd appops set com.google.android.gms BOOT_COMPLETED ignore
cmd appops set com.google.android.ims BOOT_COMPLETED ignore

# Disable GMS and IMS run in startup and restart it on boot (custom permissions for Oxygen OS)
cmd appops set com.google.android.gms AUTO_START ignore
cmd appops set com.google.android.ims AUTO_START ignore

kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          $GSM_profile PROFILE APPLIED WITH SUCCESS.                                                            "
kmsg1 "------------------------------------------------------------------------------------------------------------------------------------------------"

kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          END OF EXECUTION: $(date)                                                                              "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
exit=$(date +%s)

exectime=$((exit - init))
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"
kmsg1 "                                          EXECUTION DONE IN $exectime SECONDS.                                                                   "
kmsg1 "-------------------------------------------------------------------------------------------------------------------------------------------------"

if [[ $(getprop persist.sys.locale) == "en-US" ]]
then
toasten1
     	
elif [[ $(getprop persist.sys.locale) == "en-GB" ]]
then
toasten1

elif [[ $(getprop persist.sys.locale) == "pt-BR" ]]
then
toastpt1
     	
elif [[ $(getprop persist.sys.locale) == "id-ID" ]]
then
toastin1

elif [[ $(getprop persist.sys.locale) == "tr-TR" ]]
then
toasttr1

elif [[ $(getprop persist.sys.locale) == "fr-FR" ]]
then
toastfr1

elif [[ $(getprop persist.sys.locale) == "fr-CA" ]]
then
toastfr1

else
toasten1
fi
};;
esac
done